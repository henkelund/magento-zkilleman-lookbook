<?php
/**
 * Zkilleman_Lookbook
 *
 * Copyright (C) 2012 Henrik Hedelund (henke.hedelund@gmail.com)
 *
 * This file is part of Zkilleman_Lookbook.
 *
 * Zkilleman_Lookbook is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Zkilleman_Lookbook is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Zkilleman_Lookbook. If not, see <http://www.gnu.org/licenses/>.
 *
 * @category Zkilleman
 * @package Zkilleman_Lookbook
 * @author Henrik Hedelund <henke.hedelund@gmail.com>
 * @copyright 2012 Henrik Hedelund (henke.hedelund@gmail.com)
 * @license http://www.gnu.org/licenses/gpl.html GNU GPL
 * @link https://github.com/henkelund/magento-zkilleman-lookbook
 */
?>
<?php
    $images      = $this->getImageCollection();
    $canvasWidth = 900; //@todo get options from widget setup
    $imageWidth  = $canvasWidth*0.75;
?>
<div class="slideshow-wrapper">
    <ul id="<?php echo $this->getHtmlId(); ?>" class="slideshow">
    <?php foreach ($images as $image): ?>
        <li>
            <?php echo $image->getHtml($imageWidth, 256); ?>
            <div class="overlay">
                <span class="caption"><?php echo Mage::helper('core/string')->truncate(strip_tags($image->getCaption()), 64, '..'); ?></span>
                <span class="title"><?php echo $image->getTitle(); ?></span>
            </div>
        </li>
    <?php endforeach; ?>
    </ul>
</div>
<script type="text/javascript">
    
    (function() {
        Element.addMethods({
            bounds: function(element) {
                element = $(element);
                var elemPos = element.cumulativeOffset();
                var elemDim = element.getDimensions();
                return {
                    top:    elemPos.top,
                    left:   elemPos.left,
                    width:  elemDim.width,
                    height: elemDim.height
                };
            }
        });

        var LookbookSlideshow = Class.create();
        LookbookSlideshow.prototype = {
            _elem:    null,
            _items:   null,
            _current: -1,
            _interval: null,
            initialize: function(id)
            {
                if (!(this._elem = $(id))) {
                    return;
                }
                this._items = this._elem.select('li');
                if (!this._items.length) {
                    return;
                }
                this._initFakes(2);
                this.slide('right', 0);
                this.start();
                this._elem.observe('mouseover', this.stop.bind(this));
                this._elem.observe('mouseout', this.start.bind(this));
            },
            _initFakes: function(num)
            {
                var fake, numItems = this._items.length;
                for (var i = 0; i < num; ++i) {
                    fake = new Element('li')
                                .addClassName('fake')
                                .update(this._items[((numItems - 1) - i)%numItems].innerHTML);
                    this._elem.insert({top: fake});
                    fake = new Element('li')
                                .addClassName('fake')
                                .update(this._items[i%numItems].innerHTML);
                    this._elem.insert({bottom: fake});
                }
            },
            _targetOffset: function(item)
            {
                var iBounds = item.bounds();
                var iCenter = iBounds.left + (iBounds.width/2);
                var eBounds = this._elem.bounds();
                var eCenter = eBounds.left + (eBounds.width/2);
                return parseInt(eCenter - iCenter);
            },
            slide: function(direction, duration)
            {
                if (typeof direction == 'undefined' || direction != 'left') {
                    direction = 'right';
                }
                if (typeof duration == 'undefined') {
                    duration = 1;
                }
                var numItems = this._items.length;
                if (this._current != (this._current + numItems)%numItems) { // on a fake
                    this._current = (this._current + numItems)%numItems;
                    var realItem = this._items[this._current];
                    this._elem.style.left = this._targetOffset(realItem) + 'px';
                }
                var item;
                if (direction == 'right') {
                    item = this._items[this._current++].next('li');
                } else {
                    item = this._items[this._current--].previous('li');
                }
                var offset = this._targetOffset(item);
                new Effect.Move(this._elem, {
                                x: offset,
                                duration: duration,
                                mode: 'absolute'});
            },
            start: function()
            {
                var intervalFunction =  this.slide.bind(this);
                this._interval = window.setInterval(
                                    function() {
                                        intervalFunction('<?php echo $this->getDirection(); ?>');
                                    }, 4000);
            },
            stop: function()
            {
                if (this._interval) {
                    window.clearInterval(this._interval);
                    this._interval = null;
                }
            }
        };

        new LookbookSlideshow('<?php echo $this->getHtmlId(); ?>');
    })();
    
</script>
