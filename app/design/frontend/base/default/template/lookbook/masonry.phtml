<?php
/**
 * Zkilleman_Lookbook
 *
 * Copyright (C) 2012 Henrik Hedelund (henke.hedelund@gmail.com)
 *
 * This file is part of Zkilleman_Lookbook.
 *
 * Zkilleman_Lookbook is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Zkilleman_Lookbook is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Zkilleman_Lookbook. If not, see <http://www.gnu.org/licenses/>.
 *
 * @category Zkilleman
 * @package Zkilleman_Lookbook
 * @author Henrik Hedelund <henke.hedelund@gmail.com>
 * @copyright 2012 Henrik Hedelund (henke.hedelund@gmail.com)
 * @license http://www.gnu.org/licenses/gpl.html GNU GPL
 * @link https://github.com/henkelund/magento-zkilleman-lookbook
 */
?>
<div class="masonry">
    <div id="<?php echo $this->getHtmlId(); ?>" class="wall"></div>
    <div class="controls">
        <button id="<?php echo $this->getHtmlId(); ?>_load">
            <?php echo $this->__('Load more images'); ?>
        </button>
    </div>
</div>
<script type="text/javascript">
//<![CDATA[

    (function() {
        
        var masonry  = new LookbookMasonry('<?php echo $this->getHtmlId(); ?>'),
            images   = <?php echo $this->getImagesJson(); ?>,
            curPage  = 1,
            lastPage = <?php echo $this->getImageCollection()->getLastPageNumber(); ?>;
        
        function appendBrick(content, animate)
        {
            var brick = new Element('div');
            brick.addClassName('brick');
            brick.insert(content);
            return masonry.append(brick, animate);
        }
        
        if (curPage == lastPage) {
            $('<?php echo $this->getHtmlId(); ?>_load').hide();
        };
        
        for (var i = 0; i < images.length; ++i) {
            appendBrick(images[i], false);
        }
        
        $('<?php echo $this->getHtmlId(); ?>_load').observe('click', function(event) {
            
            var button = Event.element(event);
            if (button.hasClassName('disabled')) {
                return;
            }
            button.addClassName('disabled');
            button.update('<?php echo $this->__('Loading..'); ?>');
            
            var params = <?php echo $this->getAjaxParams(); ?>;
            params.cur_page = ++curPage;
            
            var url = '<?php echo $this->getAjaxUrl(); ?>';
            new Ajax.Request(url, {
                parameters: params,
                onSuccess: function(transport) {
                    var images = transport.responseJSON;
                    if (!typeof object == 'object' && (images instanceof Array)) {
                        // alert('An error occured');
                    } else {
                        for (var i = 0; i < images.length; ++i) {
                            appendBrick(images[i], true);
                        }
                    }
                    if (curPage == lastPage) {
                        $('<?php echo $this->getHtmlId(); ?>_load').fade();
                    } else {
                        button.removeClassName('disabled');
                        button.update('<?php echo $this->__('Load more images'); ?>');
                    }
                }
            });
        });
        
    })();

//]]>
</script>
