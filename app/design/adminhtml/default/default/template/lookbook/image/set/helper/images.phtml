<?php
/**
 * Zkilleman_Lookbook
 *
 * Copyright (C) 2012 Henrik Hedelund (henke.hedelund@gmail.com)
 *
 * This file is part of Zkilleman_Lookbook.
 *
 * Zkilleman_Lookbook is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Zkilleman_Lookbook is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Zkilleman_Lookbook. If not, see <http://www.gnu.org/licenses/>.
 *
 * @category Zkilleman
 * @package Zkilleman_Lookbook
 * @author Henrik Hedelund <henke.hedelund@gmail.com>
 * @copyright 2012 Henrik Hedelund (henke.hedelund@gmail.com)
 * @license http://www.gnu.org/licenses/gpl.html GNU GPL
 * @link https://github.com/henkelund/magento-zkilleman-lookbook
 */
?>
<?php
/**
 *
 * @var Zkilleman_Lookbook_Block_Adminhtml_Image_Set_Helper_Images 
 */
$element = $this->getElement();
$members = $element->getImageCollection();
$width   = 270;
$height  = 100;
$st      = $this->__('Type to search..'); // search text
?>
<input
    id="<?php echo $element->getHtmlId(); ?>"
    type="hidden"
    name="<?php echo $element->getName(); ?>"
    value="<?php echo $element->getValue(); ?>" />
<div class="set-member-column">
    <ul id="setMemberImages">
        <?php if ($members) foreach ($members as $image): ?>
        <li id="image_<?php echo $image->getId(); ?>"
            data-id="<?php echo $image->getId(); ?>">
            <?php echo $image->getHtml($width, $height, array(
                                'title' => $image->getTitle())); ?>
        </li>
        <?php endforeach; ?>
    </ul>
    <p class="note">
        <span>
            <?php echo $this->__('Search for images in the field to the right.'); ?>
            <?php echo $this->__('Drop an image in the left box to add it to this set.'); ?>
        </span>
    </p>
</div>
<div class="set-candidate-column">
    <ul id="setCandidateImages"></ul>
    <input
        id="<?php echo $element->getHtmlId(); ?>_search"
        type="text"
        class="input-text"
        value="<?php echo $st; ?>"
        onfocus="if (this.value == '<?php echo $st; ?>') this.value='';"
        onblur="this.value = '<?php echo $st; ?>';"
        />
    <div class="autocomplete" id="<?php echo $element->getHtmlId(); ?>_ac" style="display: none;"></div>
</div>
<script type="text/javascript">
//<![CDATA[
    (function() {
    
        function refershMemberIds()
        {
            var ids = [];
            $$('#setMemberImages li').each(function(elem) {
                ids.push(parseInt(elem.getAttribute('data-id')));
            });
            $('<?php echo $element->getHtmlId(); ?>').value = ids.join(',');
        }
        
        function initDropzone(id, containment) {
            var options = {
                constraint  : false,
                dropOnEmpty : true,
                containment : containment,
                hoverclass  : 'hover'
            };
            if (id == 'setMemberImages') {
                options.onUpdate = refershMemberIds;
            }
            Sortable.create(id, options);
        }
        
        function getAllImageIds()
        {
            var ids = [];
            $$('#setMemberImages li, #setCandidateImages li').each(function(elem) {
                ids.push(parseInt(elem.getAttribute('data-id')));
            });
            return ids;
        }

        document.observe('dom:loaded', function() {
            // Init dropzones
            var containers = ['setMemberImages', 'setCandidateImages'];
            containers.each(function(id) {
                initDropzone(id, containers);
            });
            
            // Init searchbox
            new Ajax.Autocompleter(
                '<?php echo $element->getHtmlId(); ?>_search',
                '<?php echo $element->getHtmlId(); ?>_ac',
                '<?php echo $this->getUrl('*/adminhtml_image_set/autocomplete'); ?>',
                {
                    paramName: 'q',
                    parameters: 'width=<?php echo $width; ?>&height=<?php echo $height; ?>',
                    callback: function(input, value) {
                        return value + '&exclude=' + getAllImageIds().join(',');
                    },
                    updateElement: function(li) {
                        $(li).removeClassName('selected').stopObserving();
                        $('setCandidateImages').insert(li);
                        initDropzone('setCandidateImages', containers);
                        $('<?php echo $element->getHtmlId(); ?>_search').value = '';
                    }
                }
            );
        });
    
    })();
//]]>
</script>